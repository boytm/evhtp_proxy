
# build mproxy on AppVeyor - https://ci.appveyor.com

#shallow_clone: true
clone_depth: 10

version: '{build}'
image:
  - Visual Studio 2017

environment:
  LIBEVENT_VERSION: 2.1.10
  BOOST_ROOT: C:\Libraries\boost_1_59_0
  BOOST_LIBRARYDIR: C:\Libraries\boost_1_59_0\lib64-msvc-14.0

  matrix:
    # build without shadowsocks protocol
    - ENABLE_SS: OFF
      USE_CRYPTO_OPENSSL: OFF
      USE_CRYPTO_MBEDTLS: OFF
      CMAKE_GENERATOR: "Visual Studio 15 2017 Win64"
      BUILD_SUFFIX: "vc2017_x64"
      BITS: 64

    # build with openssl library
    - ENABLE_SS: ON
      USE_CRYPTO_OPENSSL: ON
      USE_CRYPTO_MBEDTLS: OFF
      CMAKE_GENERATOR: "Visual Studio 15 2017 Win64"
      BUILD_SUFFIX: "openssl_vc2017_x64"
      BITS: 64
      OPENSSL_VERSION: 1_1_1j
      OPENSSL_DIR: C:\OpenSSL
      OPENSSL_ROOT_DIR: C:\OpenSSL

    # build with mbed TLS library
    - ENABLE_SS: ON
      USE_CRYPTO_OPENSSL: OFF
      USE_CRYPTO_MBEDTLS: ON
      MBEDTLS_VERSION: 2.16.6
      CMAKE_GENERATOR: "Visual Studio 15 2017 Win64"
      BUILD_SUFFIX: "mbedtls_vc2017_x64"
      BITS: 64

    # x86 build with mbed TLS library
    - ENABLE_SS: ON
      USE_CRYPTO_OPENSSL: OFF
      USE_CRYPTO_MBEDTLS: ON
      MBEDTLS_VERSION: 2.16.6
      CMAKE_GENERATOR: "Visual Studio 15 2017"
      BUILD_SUFFIX: "mbedtls_vc2017_x86"
      BITS: 32

    # build https proxy with openssl library
    #- ENABLE_SS: ON
    #  ENABLE_HTTPS_PROXY: ON
    #  USE_CRYPTO_OPENSSL: ON
    #  USE_CRYPTO_MBEDTLS: OFF

install:
- ECHO "Filesystem root:"
- ps: "ls \"C:/\""
  # recursive clone 
- git submodule update --init --recursive --depth 3
  # VC env
- '"C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\VC\Auxiliary\Build\vcvars%BITS%.bat"'
  # install OpenSSL
- mkdir C:\OpenSSL
- ps: if (Test-Path env:OPENSSL_VERSION) { Start-FileDownload "http://slproweb.com/download/Win${env:BITS}OpenSSL-${env:OPENSSL_VERSION}.exe" }
- if defined OPENSSL_VERSION Win%BITS%OpenSSL-%OPENSSL_VERSION%.exe /SILENT /VERYSILENT /SP- /DIR="C:\OpenSSL"
#- appveyor DownloadFile https://curl.haxx.se/ca/cacert.pem -FileName C:\OpenSSL\cacert.pem
  # mbedTLS
- cd \
- if defined MBEDTLS_VERSION appveyor DownloadFile https://tls.mbed.org/download/mbedtls-%MBEDTLS_VERSION%-apache.tgz
- if defined MBEDTLS_VERSION 7z x mbedtls-%MBEDTLS_VERSION%-apache.tgz -so | 7z x -si -ttar > nul
- if defined MBEDTLS_VERSION cd mbedtls-%MBEDTLS_VERSION%
- if defined MBEDTLS_VERSION mkdir lib
- if defined MBEDTLS_VERSION mkdir cmake-build
- if defined MBEDTLS_VERSION cd cmake-build
- if defined MBEDTLS_VERSION cmake -G "%CMAKE_GENERATOR%" .. 
- if defined MBEDTLS_VERSION cmake --build . --config Release --target mbedtls
- if defined MBEDTLS_VERSION move library\Release\*.lib ..\lib\
  # Libevent
- cd \
- appveyor DownloadFile https://github.com/libevent/libevent/releases/download/release-%LIBEVENT_VERSION%-stable/libevent-%LIBEVENT_VERSION%-stable.tar.gz
- 7z x libevent-%LIBEVENT_VERSION%-stable.tar.gz -so | 7z x -si -ttar > nul
- cd libevent-%LIBEVENT_VERSION%-stable
- nmake -f Makefile.nmake static_libs
- mkdir lib
- move *.lib lib\
- move WIN32-Code\nmake\event2\* include\event2\
- move *.h include\
- cd ..
  # 
- cd %APPVEYOR_BUILD_FOLDER%


build_script:
- set PATH=C:\ProgramData\chocolatey\bin;C:\apache-ant-1.9.6\bin;%PATH%
- set JAVA_HOME=C:\Program Files\Java\jdk1.7.0
- set PATH=%JAVA_HOME%\bin;%PATH%
# - set PATH=%PATH%;C:\Program Files (x86)\Haskell Platform\2014.2.0.0\bin
# - set PATH=%PATH%;C:\Program Files (x86)\Haskell Platform\2014.2.0.0\lib\extralibs\bin
- set PATH=C:\Python27-x64\scripts;C:\Python27-x64;%PATH%
- mkdir cmake-build
- cd cmake-build
- cmake -G "%CMAKE_GENERATOR%" -DENABLE_HTTPS_PROXY:STRING="%ENABLE_HTTPS_PROXY%" -DENABLE_SS:STRING="%ENABLE_SS%" -DUSE_CRYPTO_OPENSSL:STRING="%USE_CRYPTO_OPENSSL%" -DUSE_CRYPTO_MBEDTLS="%USE_CRYPTO_MBEDTLS%" -DLIBEVENT_ROOT=C:\libevent-%LIBEVENT_VERSION%-stable -DMBEDTLS_ROOT_DIR=C:\mbedtls-%MBEDTLS_VERSION% -DBOOST_ROOT="%BOOST_ROOT%" -DBOOST_LIBRARYDIR="%BOOST_LIBRARYDIR%" ..
- cmake --build . --config Release
# TODO: 
# - cpack
# - ctest 

artifacts:
- path: cmake-build\Release
  name: mproxy_$(BUILD_SUFFIX)

deploy:
  #release: mproxy_v$(appveyor_build_version)
  #description: 'Release description'
  provider: GitHub
  auth_token:
    secure: wFxle0z6fJTg0aVgEyl46GbOPGvVb/WvnNmmO5ifTaBQx5Q3qlhlfwwIpuABfuty 
  artifact: /mproxy_.*/
  draft: true
  prerelease: false
  on:
    appveyor_repo_tag: true        # deploy on tag push only

